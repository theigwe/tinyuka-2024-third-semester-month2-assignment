name: Terraform Backend

on:
  push:
    paths:
      - 'terraform/backend/**'
  pull_request:
    paths:
      - 'terraform/backend/**'

env:
  TF_VERSION: 1.6.0
  WORKING_DIRECTORY: terraform/backend
  TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
  TF_VAR_backend_bucket: ${{ secrets.TF_STATE_BUCKET }}
  TF_VAR_backend_bucket_key: ${{ secrets.TF_STATE_KEY }}

jobs:
  validate:
    environment: dev
    name: Validate Terraform
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || ((github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Format Check
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: terraform fmt -check

      - name: Terraform Init
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: terraform init

      - name: Terraform Validate
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: terraform validate

  plan:
    needs: validate
    environment: dev
    name: Terraform Plan
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev' && (github.event.pull_request.merged == true || github.event_name == 'push')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Init
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: terraform init

      - name: Terraform Plan
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: terraform plan -no-color

  apply:
    needs: validate
    environment: dev
    name: Terraform Apply
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && (github.event.pull_request.merged == true || github.event_name == 'push')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Init
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: terraform init

      - name: Terraform Plan
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: terraform plan -no-color

      - name: Terraform Apply
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: terraform apply -auto-approve